body {
    background-color: #eee;

}

h1 {
    text-align: center;
}

.container {
    width: 1000px;
    height: 500px;
    background-color: #333;
    margin: 0 auto;
    /* 정가운데 정렬!! */
    font-size: 50px;
    font-weight: 700;


    /* 기술 용어
    -main axis: 주축
    -cross axis: 교차축
    */

    display: flex;
    /* 요소들을 나란하게 만들어줌 */
    /* flex-direction: 정렬 방향 
        -row (기본값): 수평 정렬 (좌 -> 우)
        -row-reverse: 수평 정렬 (우 -> 좌)
        -column :수직 정렬 (위 -> 아래)
        -column-reverse (수직 정렬 (아래 -> 위)

    */
    flex-direction: row;
    /* flex-direction: row-reverse; */
    /* flex-direction: column; */
    /* flex-direction: column-reverse; */

    /* justify-content: 주축 item을 어떻게 배치할 것인가? 
        -flex-direction: 수평 정렬일 때; 주축 = row
        -flex-direction: 수직 정렬일 때; 주축 = column

        (사용 가능한 속성)
        -flex-start (기본값): item을 start 지점을 기준으로 나열
        -flex-end: item을 end 지점을 기준으로 나열
        -space-between: 처음과 마지막 item을 양 끝에 붙이고 나머지 영역 공평하게 나눔
        -space-around: item들이 모든 여백을 동일하게 가짐(양 끝 영역 1, 나머지 영역은 2)
        -space-evenly: start부터 첫 item의 간격, item 끼리의 간격, 마지막 item부터 end까지의 간격 일정

    */
    /* justify-content: flex-start; */
    /* justify-content: flex-end; */
    /* justify-content: space-between; */
    /* justify-content: space-around; */
    /* justify-content: space-evenly; */

    /* align-items: 교차축에 대해 item을 어떻게 배치할 것인가?
        -flex-direction이 수평 정렬일 때; 교차축 = column
        -flex-direction이 수직 정렬일 때; 교차축 = row

        (사용 가능한 속성)
        -stretch (기본값): container의 교차축을 채우기 위해 늘림
            -현재 .items 요소에 width, height 값이 있어 늘어나지 않음
        -flex-start: 교차축의 시작점으로 정렬
        -flex-end: 교차축의 끝점으로 정렬
        -center: 교차축의 가운데 정렬
        -baseline: item을 텍스트의 베이스라인 기준으로 정렬

    */

    /* align-items: stretch; */
    /* align-items: flex-start; */
    /* align-items: flex-end; */
    /* align-items: center; */
    /* align-items: baseline; */

    /* flex-wrap: 줄바꿈(개행) 처리
        ->컨테이너가 한 줄에 아이템을 다 수용하지 못할 때, 줄바꿈 여부 설정 가능

        (사용 가능한 속성)
        -wrap: 줄바꿈
        -wrap-reverse: 줄바꿈 + 역순배치

        */
        
        /* flex-wrap: wrap; */
        /* flex-wrap: wrap-reverse; */
        
        /* align-content: 여러 행 정렬
            (조건) flex-wrap: wrap 상태에서 아이템에 2줄 이상 일 때 교차축 방향 설정

        */

        /*height: 300px */
        /* align-content: stretch; */
        /* align-content: flex-start; */
        /* align-content: flex-end; */
        /* align-content: center; */
        /* align-content: space-between; */
        /* align-content: space-around; */
        /* align-content: evenly; */





}

.container > .items {
    width: 100px;
    height: 100px;
    text-align: center;
    line-height: 100px;
    /* 텍스트 가운데 정렬! */
}

.item1 {
    background-color: red;
}

.item2 {
    background-color: orange;
}

.item3 {
    background-color: yellow;
}

.item4 {
    background-color: green;
}

.item5 {
    background-color: blue;
}

/* .item6 {
    background-color: violet;
}

.item7 {
    background-color: lavender;
} */


    /* div 안에 div 정가운데 정렬 */
    .outer {
        width: 300px;
        height: 300px;
        background-color: aquamarine;

    }

    .inner {
        width: 100px;
        height: 100px;
        background-color: pink;
    
    }

    /* ver. position, transform */
        .outer1 {
            position: relative;

        }

        .inner1 {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
  
   /* div 안에 div 정가운데 정렬 (ver. display, flex) */
        .outer2 {
            display: flex;
            justify-content: center;
            align-items: center;
            
        }

       .inner2 { }